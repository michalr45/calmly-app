{"version":3,"file":"js/embedded.1b12fe3c.js","mappings":"yPACOA,MAAM,Y,WACgC,+B,UAEvCC,EAAAA,EAAAA,GAAiD,SAA1CC,KAAK,SAASC,MAAM,MAAMC,GAAG,c,wBAInCJ,MAAM,a,sFAPXC,EAAAA,EAAAA,GAMM,MANNI,EAMM,EALJJ,EAAAA,EAAAA,GAGO,QAHAK,SAAMC,EAAA,KAAAA,EAAA,IAAAC,EAAAA,EAAAA,KAAA,IAAAC,IAAUC,EAAAC,kBAAAD,EAAAC,oBAAAF,IAAgB,e,aACNR,EAAAA,EAAAA,GAAsC,SAA/BC,KAAK,O,qCAAgBU,EAAAC,SAAQC,I,iBAARF,EAAAC,YAC3DE,GAAiD,IAE1CH,EAAAI,QAAK,WAAdC,EAAAA,EAAAA,IAA+B,IAAAC,GAAAC,EAAAA,EAAAA,IAAZP,EAAAI,OAAK,uBAE1Bf,EAAAA,EAAAA,GAQM,MARNmB,EAQM,gBAPJH,EAAAA,EAAAA,IAMMI,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IANuBV,EAAAW,gBAAjBC,K,WAAZP,EAAAA,EAAAA,IAMM,OANwCQ,IAAKD,EAAcpB,GAAIJ,MAAM,Q,EACzEC,EAAAA,EAAAA,GAGS,UAHDyB,MAAM,MAAMC,OAAO,MAAOC,IAAKJ,EAAc,GAAIK,MAAM,uBACvDC,YAAY,IAAIC,MAAM,4GACFC,gBAAA,IAAgB,aAC5C,EAAAC,IACAhC,EAAAA,EAAAA,GAAsE,UAA7DiC,QAAKpB,GAAEJ,EAAAyB,oBAAoBX,EAAc,KAAK,SAAM,EAAAY,Q,kBAGjEnC,EAAAA,EAAAA,GAAkC,SAAd,aAAU,YAAnBW,EAAAyB,YAAO,G,cAMpB,GACEC,KAAM,eACNC,IAAAA,GACE,MAAO,CACLC,cAAe,GACfjB,eAAgB,GAChBc,SAAS,EACTxB,SAAU,KACVG,MAAO,KAEX,EACAyB,QAAS,CACP,uBAAMC,GACJ,MAAMC,EAAW,wBACjBC,KAAKP,SAAU,EACf,IACE,MAAMQ,QAAiBC,EAAAA,EAAMC,IAAIJ,GACjCC,KAAKJ,cAAcQ,QAAQH,EAASN,MACpC,IAAK,MAAMU,KAAOL,KAAKJ,cAAe,CACpC,IAAIU,EAAU,sCAAqCD,EAAIA,MACnDE,QAAaL,EAAAA,EAAMC,IAAIG,GACvBtB,EAAMuB,EAAKZ,KAAKa,KAAKC,MAAM,iBAC/BzB,EAAIoB,KAAKC,EAAI7C,IACbwC,KAAKrB,eAAeyB,KAAKpB,EAC3B,CACAgB,KAAKP,SAAU,EACfiB,QAAQC,IAAIX,KAAKrB,eACnB,CAAE,MAAOP,GACPsC,QAAQC,IAAIvC,EACd,CACF,EACA,sBAAML,GACJ,IAAKiC,KAAK/B,WACL+B,KAAK/B,SAASwC,MAAM,6GAEvB,YADAT,KAAK5B,MAAQ,oGAGf,MAAM2B,EAAW,wBACjB,UACQG,EAAAA,EAAMU,KAAKb,EAAU,CAAEM,IAAKL,KAAK/B,WACvC+B,KAAK/B,SAAW,KAChB4C,SAASC,SACLd,KAAK5B,QACP4B,KAAK5B,MAAQ,KAEjB,CAAE,MAAOA,GACPsC,QAAQC,IAAIvC,EACd,CACF,EACA,yBAAMmB,CAAoB/B,GACxB,MAAMuC,EAAY,wBAAuBvC,KACzC,UACQ0C,EAAAA,EAAMa,OAAOhB,GACnBc,SAASC,QACX,CAAE,MAAO1C,GACPsC,QAAQC,IAAIvC,EACd,CACF,GAEF4C,OAAAA,GACEhB,KAAKF,mBACP,G,SC7EF,MAAMmB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://frontend/./src/views/Embedded.vue","webpack://frontend/./src/views/Embedded.vue?a136"],"sourcesContent":["<template>\r\n  <div class=\"add-form\">\r\n    <form @submit.prevent=\"addEmbeddedSound\">\r\n      Paste YouTube video url: &nbsp;<input type=\"text\" v-model=\"urlInput\">\r\n      <input type=\"submit\" value=\"Add\" id=\"add-button\">\r\n    </form>\r\n    <p v-if=\"error\">{{ error }}</p>\r\n  </div>\r\n  <div class=\"container\">\r\n    <div v-for=\"embeddedSound in embeddedSounds\" :key=\"embeddedSound.id\" class=\"item\">\r\n      <iframe width=\"560\" height=\"315\" :src=\"embeddedSound[1]\" title=\"YouTube video player\"\r\n              frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;\r\n              picture-in-picture\" allowfullscreen>\r\n      </iframe>\r\n      <button @click=\"deleteEmbeddedSound(embeddedSound[2])\">delete</button>\r\n    </div>\r\n  </div>\r\n  <p v-show=\"loading\">...loading</p>\r\n</template>\r\n\r\n<script>\r\nimport { axios } from \"@/common/api.service\";\r\n\r\nexport default {\r\n  name: \"Embedded.vue\",\r\n  data() {\r\n    return {\r\n      retrievedUrls: [],\r\n      embeddedSounds: [],\r\n      loading: false,\r\n      urlInput: null,\r\n      error: null,\r\n    }\r\n  },\r\n  methods: {\r\n    async getEmbeddedSounds() {\r\n      const endpoint = '/api/embedded_sounds/';\r\n      this.loading = true;\r\n      try {\r\n        const response = await axios.get(endpoint);\r\n        this.retrievedUrls.push(...response.data);\r\n        for (const url of this.retrievedUrls) {\r\n          let oembed = `https://www.youtube.com/oembed?url=${url.url}`;\r\n          let resp = await axios.get(oembed);\r\n          let src = resp.data.html.match(/src=\"([^\"]+)\"/);\r\n          src.push(url.id);\r\n          this.embeddedSounds.push(src);\r\n        }\r\n        this.loading = false;\r\n        console.log(this.embeddedSounds);\r\n      } catch (error){\r\n        console.log(error);\r\n      }\r\n    },\r\n    async addEmbeddedSound() {\r\n      if (!this.urlInput ||\r\n          !this.urlInput.match(/^((?:https?:)?\\/\\/)?((?:www|m)\\.)?(?:youtube\\.com|youtu.be)(\\/(?:[\\w-]+\\?v=|embed\\/|v\\/)?)([\\w-]+)(\\S+)?$/)) {\r\n        this.error = 'Provided answer does not match the correct url pattern. Please use only links to YouTube videos.';\r\n        return;\r\n      }\r\n      const endpoint = '/api/embedded_sounds/';\r\n      try {\r\n        await axios.post(endpoint, { url: this.urlInput });\r\n        this.urlInput = null;\r\n        location.reload();\r\n        if (this.error) {\r\n          this.error = null;\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    async deleteEmbeddedSound(id) {\r\n      const endpoint = `/api/embedded_sounds/${id}/`;\r\n      try {\r\n        await axios.delete(endpoint);\r\n        location.reload();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getEmbeddedSounds();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.container{\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: 50px;\r\n}\r\n\r\n.item{\r\n  width: 40%;\r\n  padding: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.item button{\r\n  margin-top: 10px;\r\n  background-color: powderblue;\r\n  border: 1px solid black;\r\n  border-radius: 8px;\r\n  width: 80px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  text-transform: capitalize;\r\n}\r\n\r\n.add-form{\r\n  margin-top: 25px;\r\n}\r\n\r\n.add-form input[type=\"text\"]{\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  height: 20px;\r\n  width: 180px;\r\n  border: 1px solid black;\r\n  border-radius: 6px;\r\n}\r\n\r\n.add-form input[type=\"submit\"]{\r\n  height: 25px;\r\n  width: 60px;\r\n  border: 1px solid black;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n}\r\n\r\n</style>","import { render } from \"./Embedded.vue?vue&type=template&id=652f9177&scoped=true\"\nimport script from \"./Embedded.vue?vue&type=script&lang=js\"\nexport * from \"./Embedded.vue?vue&type=script&lang=js\"\n\nimport \"./Embedded.vue?vue&type=style&index=0&id=652f9177&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-652f9177\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","type","value","id","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","addEmbeddedSound","$data","urlInput","$event","_hoisted_3","error","_createElementBlock","_hoisted_4","_toDisplayString","_hoisted_5","_Fragment","_renderList","embeddedSounds","embeddedSound","key","width","height","src","title","frameborder","allow","allowfullscreen","_hoisted_6","onClick","deleteEmbeddedSound","_hoisted_7","loading","name","data","retrievedUrls","methods","getEmbeddedSounds","endpoint","this","response","axios","get","push","url","oembed","resp","html","match","console","log","post","location","reload","delete","created","__exports__","render"],"sourceRoot":""}