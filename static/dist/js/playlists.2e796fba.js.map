{"version":3,"file":"js/playlists.2e796fba.js","mappings":"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","sources":["webpack://frontend/./src/views/Playlists.vue","webpack://frontend/./src/views/Playlists.vue?790b"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div v-for=\"playlist in playlists\" :key=\"playlist.id\" class=\"playlist-item\">\r\n        <button @click=\"playPlaylist(playlist.id); changeButtonColor($event.target)\" class=\"playlist-btn\">{{ playlist.name }}</button>\r\n        <button @click=\"deletePlaylist(playlist.id)\" class=\"delete-button\">delete</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"container\">\r\n      <div class=\"icon-box\" v-for=\"item in playlistItems\" :key=\"item.id\">\r\n          <img :src=\"item[0]\" @click=\"playAudio($event)\">\r\n          <audio loop autoplay>\r\n            <source :src=\"item[1]\">\r\n          </audio>\r\n          <input type=\"range\" :value=\"setDefaultSliderPosition(item[2])\" min=\"0\" max=\"100\" step=\"1\"\r\n                 @change=\"setVolume($event, $event.target.value)\"\r\n          >\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { axios } from \"@/common/api.service\";\r\nimport { nextTick } from 'vue';\r\n\r\nexport default {\r\n  name: \"Playlists\",\r\n  data() {\r\n    return {\r\n      playlists: [],\r\n      playlistItems: [],\r\n    }\r\n  },\r\n  methods: {\r\n    async getPlaylists(){\r\n      const endpoint = '/api/playlists/playlists/';\r\n      try {\r\n        const response = await axios.get(endpoint);\r\n        this.playlists.push(...response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    async playPlaylist(id){\r\n      this.playlistItems = [];\r\n      const endpoint = `/api/playlists/playlists/${id}/`;\r\n      try {\r\n        const response = await axios.get(endpoint);\r\n        this.playlistItems.push(...response.data.sounds);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      await nextTick()\r\n      let sounds = document.querySelectorAll('audio');\r\n      for (let i = 0; i < sounds.length; i++) {\r\n        sounds[i].volume = this.playlistItems[i][2]\r\n      }\r\n    },\r\n    playAudio(element) {\r\n      let audio = element.target.nextSibling;\r\n      let elementImage = element.target.src.split('.png')[0]\r\n      if (audio.paused) {\r\n        audio.play();\r\n        element.target.src = elementImage + '-white.png';\r\n      } else {\r\n        audio.pause();\r\n        element.target.src = element.target.src.split('-white.png')[0] + '.png';\r\n      }\r\n    },\r\n    setVolume(element, value) {\r\n      let audio = element.target.previousSibling;\r\n      audio.volume = value / 100;\r\n    },\r\n    setDefaultSliderPosition(item){\r\n      if (item !== '1' && item !== '0') {\r\n        item = item.split('.')[1]\r\n        if (item.length === 1) {\r\n          item += '0'\r\n        }\r\n        return item\r\n      } else if (item === '1'){\r\n        item = '100'\r\n        return item\r\n      } else if (item === '0') {\r\n        item = '0'\r\n        return item\r\n      }\r\n    },\r\n    changeButtonColor(button) {\r\n      const btns = document.querySelectorAll('.playlist-btn');\r\n      const deleteBtns = document.querySelectorAll('.delete-button');\r\n      for (let btn of btns){\r\n        btn.classList.remove('active');\r\n      }\r\n      for (let deleteBtn of deleteBtns){\r\n        deleteBtn.classList.remove('active');\r\n      }\r\n      button.classList.toggle('active');\r\n      button.nextSibling.classList.toggle('active');\r\n    },\r\n    async deletePlaylist(id) {\r\n      const endpoint = `/api/playlists/playlists/${id}/`;\r\n      try {\r\n        await axios.delete(endpoint);\r\n        location.reload();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getPlaylists();\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.playlist-item{\r\n  padding: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.playlist-item .playlist-btn{\r\n  width: auto;\r\n  height: 30px;\r\n  background: transparent;\r\n  color: white;\r\n  border: 1px solid black;\r\n  border-radius: 6px;\r\n  font-weight: bold;\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n  cursor: pointer;\r\n  transition: 0.4s all;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.playlist-item .playlist-btn:hover, .playlist-btn.active{\r\n  background-color: powderblue;\r\n  color: black;\r\n}\r\n\r\n.delete-button{\r\n  width: auto;\r\n  height: 30px;\r\n  background-color: darkred;\r\n  color: white;\r\n  border: 1px solid black;\r\n  border-radius: 6px;\r\n  font-weight: bold;\r\n\r\n  cursor: pointer;\r\n  display: none;\r\n}\r\n\r\n.delete-button.active{\r\n  display: block;\r\n}\r\n\r\n</style>","import { render } from \"./Playlists.vue?vue&type=template&id=79e1d030&scoped=true\"\nimport script from \"./Playlists.vue?vue&type=script&lang=js\"\nexport * from \"./Playlists.vue?vue&type=script&lang=js\"\n\nimport \"./Playlists.vue?vue&type=style&index=0&id=79e1d030&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-79e1d030\"]])\n\nexport default __exports__"],"names":["class","loop","autoplay","_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","$data","playlists","playlist","key","id","onClick","$event","$options","playPlaylist","changeButtonColor","target","name","_hoisted_2","deletePlaylist","_hoisted_3","_hoisted_4","playlistItems","item","src","_cache","playAudio","_hoisted_6","type","value","setDefaultSliderPosition","min","max","step","onChange","setVolume","data","methods","getPlaylists","endpoint","response","axios","get","this","push","error","console","log","sounds","nextTick","document","querySelectorAll","i","length","volume","element","audio","nextSibling","elementImage","split","paused","play","pause","previousSibling","button","btns","deleteBtns","btn","classList","remove","deleteBtn","toggle","delete","location","reload","created","__exports__","render"],"sourceRoot":""}